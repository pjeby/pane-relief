/*! /* @settings

name: Pane Relief
id: pane-relief
settings:
    -   id: pane-relief-pane-numbering
        title: Number panes/tabs
        description: Add tab/pane numbers to each window
        type: class-toggle

    -   id: pane-relief-disable-counts
        title: Disable history counts
        description: Remove the forward/back counts on title bars
        type: class-toggle

    -   id: pr-sliding-panes-desktop-width
        title: Sliding pane width on desktop
        description: The width of a single pane (e.g. 700px, 30vw, etc.)
        type: variable-text
        default: 700px

    -   id: pr-sliding-panes-mobile-width
        title: Sliding pane width on mobile
        description: The width of a single pane (e.g. 350px, 50vw, etc.)
        type: variable-text
        default: 350px
*/

@use "sass:selector";

$win-hidden-frame: "body.is-hidden-frameless";
$win-native-frame: "body:not(.is-frameless)";
$win-obsidian-frame: "body.is-frameless:not(.is-hidden-frameless)";

$win-any: "body";
$win-main: "body:not(.is-popout-window)";
$win-popout: "body.is-popout-window";

$win-has-titlebar: $win-obsidian-frame;
$win-no-titlebar:  "#{$win-hidden-frame}, #{$win-native-frame}";

$win-draggable-header: "body:not(.is-grabbing):not(.is-fullscreen)";


@function when($s1, $selectors...) {
    $res: $s1;
    @each $sel in $selectors {
        $res: selector.unify($res, $sel);
    }
    @return $res;
}

#{when($win-any)} {
  // Default: allow space for toggle + controls
  --pr-right-frame-space: calc(var(--ribbon-width) + var(--frame-right-space));
}
#{when($win-popout)} {
  // Popout: no toggle, just controls
  --pr-right-frame-space: var(--frame-right-space);
}

#{when($win-any, $win-obsidian-frame)},
#{when($win-any, $win-native-frame)} {
  // Visible title bar in popout - just toggle
  --pr-right-frame-space: var(--ribbon-width);
}

#{when($win-popout, $win-obsidian-frame)},
#{when($win-popout, $win-native-frame)} {
  // Visible title bar in popout - no controls
  --pr-right-frame-space: 0;
}


/* Ensure popovers are above the menu */
.menu.pane-relief-history-menu ~ .popover.hover-popover {
    z-index: var(--layer-menu);
}

/* Don't space out buttons too much on 0.16 */
body.obsidian-themepocalypse {
  .titlebar-button.mod-back, .titlebar-button.mod-forward {
    padding: 0 6px;
  }
  .titlebar-button-container {
    display: flex;
  }
}

/* Give history counts a little breathing room, and match the title text size */
.titlebar-button.mod-back { text-align: right; }

.titlebar .history-counter {
  font-size: var(--font-ui-small, 12px);
  padding-left: 3px;
  padding-right: 3px;
  display: inline-block;
  min-width: 2em;
}

/* Make the button and text more visible when you can go in that direction */
body:not(.obsidian-themepocalypse).titlebar-button.mod-back.mod-active:not(:hover),
body:not(.obsidian-themepocalypse).titlebar-button.mod-forward.mod-active:not(:hover)
{ opacity: 0.75; }

/* Maximizing */
.workspace.should-maximize .workspace-split.mod-root,
body > .popover.hover-popover .workspace-split.should-maximize
{
    .workspace-leaf:not(.is-maximized),
    .workspace-tabs:not(.has-maximized),
    .workspace-tabs.has-maximized > .workspace-tab-header-container,
    .workspace-tabs.has-maximized > .workspace-tab-container > .workspace-tab-header,
    .workspace-split:not(.has-maximized) {
      display: none;
    }
    .workspace-tabs.mod-stacked .workspace-leaf.is-maximized {
      // Override Obsidian tab positioning
      max-width: unset !important;
      left: unset !important;
    }
    .workspace-tabs.has-maximized {
      flex-basis: 100%;
    }
    .workspace-leaf.is-maximized {
      flex-basis: calc(100% - 4px); // 4px is for scrollbar width
      .view-header {
        display: flex;
        .view-header-icon { display: inherit; }
      } // always show view header when maximized
    }
}

#pr-maximize-sb-toggle {
  display: none;
  position: fixed;
  background: var(--tab-container-background);
  right: 0;
  top: 0;
  padding-right: var(--size-4-2);
  padding-left: var(--size-4-2);
  .workspace.should-maximize ~ & {
    display: block;
    #{$win-hidden-frame} & {
      right: var(--frame-right-space);
    }
    #{$win-obsidian-frame} & {
      top: var(--titlebar-height);
    }
  }
}


.workspace-leaf.is-maximized .view-header {
  .workspace:not(.is-right-sidedock-open) & {
    // leave space for relocated right ribbon toggle
    padding-right: calc(var(--pr-right-frame-space) + var(--size-4-2));
  }
  #{when($win-draggable-header, $win-hidden-frame)} & {
    .view-header-title-container {
      /* allow dragging of maximized view header */
      -webkit-app-region: drag;
      & > * {
        -webkit-app-region: no-drag;
      }
    }
  }
}

/* Sliding Panes */

:root {
  --pr-sliding-panes-desktop-width: 700px;
  --pr-sliding-panes-mobile-width: 350px;
}

body {
  --pr-sliding-panes-width: var(--pr-sliding-panes-desktop-width);
}

body.is-mobile {
  --pr-sliding-panes-width: var(--pr-sliding-panes-mobile-width);
}



.prsp-tb-overlay {
  /*
    Overlay to ensure left-sidebar draggable area is draggable, even if
    there's a non-draggable header underlaying it from a scrolled pane
  */
  display: block;
  position: fixed;
  pointer-events: none;
  top: 0;
  #{$win-obsidian-frame} & { top: var(--titlebar-height); }
  height: var(--header-height);
  width: 0;
  -webkit-app-region: drag;

  #{$win-draggable-header} .workspace.is-left-sidedock-open.is-sliding:not(.should-maximize) ~ & {
    width: var(--pr-overlay-width, 0);
    left:  var(--pr-overlay-left, 0);
  }

  #{$win-draggable-header} &::after {
    /*
      Overlay to ensure left-sidebar region is clickable, even if
      there's a draggable header underlaying it from a scrolled pane
    */
    width: var(--pr-overlay-left, var(--ribbon-width));
    height: var(--header-height);
    left: 0;
    display: block;
    position: fixed;
    content: "";
    -webkit-app-region: no-drag;
  }

  .workspace:not(.should-maximize) ~ &::before {
    /*
      Overlay to ensure right-side window controls are clickable, even if
      there's a draggable header underlaying them from a scrolled pane
    */
    right: 0;
    display: block;
    position: fixed;
    width: var(--pr-right-frame-space);
    height: var(--header-height);
    content: "";
    -webkit-app-region: no-drag;
  }
}

.mod-root.is-sliding:not(.has-maximized) {
  overflow-x: auto;
  overflow-y: hidden;

  /* Keep right sidebar toggle visible on 0.16, courtesy @ebullient */
  #{$win-main} & div.workspace-tabs.mod-top.mod-top-right-space .workspace-tab-header-container {
    padding-right: var(--ribbon-width);
    body.is-hidden-frameless:not(.is-fullscreen) & {
      padding-right: var(--pr-right-frame-space);
    }
  }

  /* Allow enough space at top of right sidebar for right ribbon toggle to function */
  .workspace.is-right-sidedock-open & + .mod-right-split .workspace-tabs.mod-top .workspace-tab-header-container::after {
    width: var(--pr-right-frame-space);
  }

  div.sidebar-toggle-button.mod-right {
    position: fixed;
    top: 0;
    right: 0;
    width: var(--ribbon-width);
    background-color: var(--tab-container-background);
    z-index: var(--layer-sidedock);
    body.is-frameless:not(.is-hidden-frameless) & {
      top: var(--titlebar-height);
    }
    body.is-hidden-frameless:not(.is-fullscreen) & {
      right: var(--frame-right-space);
    }
  }

  &>*:not(:last-child:nth-child(2)) { // don't apply when only one pane
    width: var(--pr-sliding-panes-width);
    flex: none;
    &.workspace-leaf {
      display: block;  // turn off flex for leaves
    }
  }
  &>.workspace-tabs.mod-stacked {
    min-width: calc(var(--pr-sliding-panes-width) + var(--tab-stacked-header-width)*var(--pane-relief-tab-count));
  }
  &>.workspace-tabs.mod-stacked:not(:last-child:nth-child(2)) {
    width: calc(var(--pr-sliding-panes-width) + var(--tab-stacked-header-width)*var(--pane-relief-tab-count));
  }
}

/* Pane Numbering */

body { --pr-pane-number-bottom: 3px; }
body.obsidian-themepocalypse { --pr-pane-number-bottom: 0px; }

body.pane-relief-pane-numbering {
  /* Number panes in their headers */
  .workspace-split .workspace-leaf .view-header-icon { min-width: fit-content; display: inherit; }
  .workspace-split .workspace-leaf .view-header-icon::before
  {
      content: "";
      display: inline-flex;
      position: relative;
      min-inline-size: 1em;
      bottom: var(--pr-pane-number-bottom);
  }
  .workspace-split .workspace-leaf.has-pane-relief-label .view-header-icon::before
  {
      counter-reset: pane-number var(--pane-relief-label);
      content: counter(pane-number);
      font-size: var(--font-ui-small, inherit);
  }

  /* Number panes in "koncham workspace" plugin's Center Panes view */
  .workspace-leaf-content[data-type="center-panes"]
  { counter-reset: pane-number;}

  .workspace-leaf-content[data-type="center-panes"] .nav-file
  { counter-increment: pane-number;}

  .workspace-leaf-content[data-type="center-panes"] .nav-file-title-content::before
  {
      content: counter(pane-number) " ";
      min-width: 1.5em;
      display: inline-block;
  }

  .workspace-leaf-content[data-type="center-panes"] .nav-file:nth-child(8) ~ .nav-file .nav-file-title-content::before
  { content: " "; }
  .workspace-leaf-content[data-type="center-panes"] .nav-file:nth-child(8) ~ .nav-file:last-child .nav-file-title-content::before
  { content: "9 " !important; }
}

/* 0.16.3 history counts */
body:not(.pane-relief-disable-counts) .view-header-nav-buttons {
  button:first-child::before {
    content: var(--pane-relief-backward-count) "\00a0"; min-width: 1.5em; text-align: right;
  }
  button:last-child::after {
    content: "\00a0" var(--pane-relief-forward-count); min-width: 1.5em;  text-align: left;
  }
}

/* Disable history counts */
body.pane-relief-disable-counts .titlebar .history-counter { display: none; }
